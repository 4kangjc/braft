name: ci
on: [push, pull_request]

permissions:
  contents: read

jobs:
  build-and-test:
    name:  >-
      CI
      ${{ matrix.os }}
      ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        compiler: [clang, gcc]
        os: [ubuntu-latest, macos-latest]
        exclude:
        # Not testing with GCC on macOS.
        - os: macos-latest
          compiler: gcc
        include:
        - compiler: clang
          CC: clang
          CXX: clang++
        - compiler: gcc
          CC: gcc
          CXX: g++

    env:
      CMAKE_BUILD_DIR: ${{ github.workspace }}/bld
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install dependencies on Linux
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get install -qq libgflags-dev \
            libprotobuf-dev libprotoc-dev protobuf-compiler \
            libleveldb-dev libgoogle-perftools-dev
        sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo env "PATH=$PATH" cmake . && sudo make && sudo mv ./lib/libgtest* /usr/lib/ && cd - 
    - name: Install dependencies on Macos 
      if: ${{ runner.os == 'Macos' }}
      working-directory: ${{ github.workspace }}
      run: |
        brew install openssl git gnu-getopt coreutils
        brew install gflags protobuf leveldb gperftools
        mkdir -p thirdparty
        git clone https://github.com/google/googletest thirdparty/googletest -b release-1.10.0 && cd thirdparty/googletest && mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS="-std=c++11" .. && make -j4 && make install
    - name: Install brpc
      working-directory: ${{ github.workspace }}
      run: |
        mkdir -p thirdparty
        git clone https://github.com/brpc/brpc.git thirdparty/brpc && cd thirdparty/brpc && mkdir -p bld && cd bld && cmake .. && make -j4 && sudo make install
    - name: Generate build config
      run: >-
        cmake -S "${{ github.workspace }}" -B "${{ env.CMAKE_BUILD_DIR }}" -DBUILD_UNIT_TESTS=ON 
        -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}/install_test/
    - name: Build
      run: >-
        cmake --build "${{ env.CMAKE_BUILD_DIR }}"
    - name: Run Tests
      working-directory: ${{ github.workspace }}/bld/test
      run: sh ../../test/run_tests.sh
